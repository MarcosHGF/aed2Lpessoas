#include<stdio.h>
#include<stdlib.h>

typedef struct no{
    int d;  
    struct no *esq, *dir; 
}arvore;


arvore* criano(int d);
arvore* insere(arvore *t, int d);
void imprimeOrdem(arvore *t);
int altura(arvore* t);
int contafolha(arvore *t);


int main(){
    arvore *t = NULL;
    int tam, f;

    t = insere(t, 10);
    t = insere(t, 2);
    t = insere(t, 15);
    t = insere(t, 7);

    imprimeOrdem(t);
    tam = altura(t);
    f = contafolha(t);

    printf("\n%d (altura), %d (folhas)\n", tam, f);

return 0;
}

arvore* criano(int d){
    arvore *aux = (arvore*)malloc(sizeof(arvore));
    aux->d = d;
    aux->esq = NULL;
    aux->dir = NULL;
    return aux;
}

arvore* insere(arvore *t, int d) {
    if (t == NULL) 
        return criano(d);
    
    if (d < t->d) 
        t->esq = insere(t->esq, d);

    else if (d > t->d) 
        t->dir = insere(t->dir, d);
    
    return t;
}

void imprimeOrdem(arvore *t) {
    if (t != NULL) {
        imprimeOrdem(t->esq);
        printf("%d ", t->d);
        imprimeOrdem(t->dir);
    }
}

int altura(arvore* t) {
    if (t == NULL)
        return 0;
    else{
        int hesq = altura(t->esq);
        int hdir = altura(t->dir);
    
        if  (hesq > hdir)
            return hesq + 1;
        else
            return hdir + 1;
    }
}

int contafolha(arvore *t){
    if(t == NULL)
        return 0;

    if(t->esq == NULL && t->dir == NULL)
        return 1;

    int folhaesq = contafolha(t->esq);
    int folhadir = contafolha(t->dir);

    return folhaesq + folhadir;

}
